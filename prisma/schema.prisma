generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  firstName String    @default("")
  lastName  String    @default("")
  address   String?
  avatarURL String?
  role      Role      @default(USER)
  bookings  Booking[]
}

model Game {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  name           String
  description    String?
  location       String
  price          Float
  remaining_slot Int
  bookings       Booking[]
  timeSlots      TimeSlot[]
}

model Booking {
  id                     String   @id @default(uuid())
  number_of_participants Int
  user_id                String
  game_id                String
  time_slot_id           String
  timeSlot               TimeSlot @relation(fields: [time_slot_id], references: [id])
  game                   Game     @relation(fields: [game_id], references: [id])
  user                   User     @relation(fields: [user_id], references: [id])
}

model Voucher {
  id               String  @id @default(uuid())
  id_game          String
  id_user          String
  discount         Float
  remaining_amount Int
  status           Boolean
}

model TimeSlot {
  id        String    @id @default(uuid())
  startTime DateTime  @default(now())
  endTime   DateTime  @default(now())
  game_id   String
  game      Game      @relation(fields: [game_id], references: [id])
  Booking   Booking[]
}

enum Role {
  USER
  ADMIN
  STORE_OWNER
}
